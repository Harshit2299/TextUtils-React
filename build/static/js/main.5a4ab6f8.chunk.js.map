{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5a4ab6f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n          {/* <Link class=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n        </li>\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log('Uppercase Was clicked' + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted to Uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log('Uppercase Was clicked' + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted to Lowercase!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log('Uppercase Was clicked' + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\" All cleared!\", \"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\" Extra Spaces removed!\", \"success\");\r\n  };\r\n  const handleSpeakClick = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    msg.lang = \"en-US\";\r\n    window.speechSynthesis.speak(msg);\r\n    props.showAlert(\" Speaking!\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#1a3d4b96\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear All\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleSpeakClick}\r\n        >\r\n          Speak\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} Words, {text.length} Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview it here.\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&<div>\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\">\r\n        <strong>{capitalize( props.alert.type)}</strong>:{props.alert.msg}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark mode has been enabled.\", \"success\");\n      document.title = \"Textutils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light mode has been enabled.\", \"success\");\n      document.title = \"Textutils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />}> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}> */}\n            <TextForm heading=\"Enter text to analyze\"  mode={mode} />\n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}